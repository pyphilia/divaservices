<?xml version="1.0" encoding="UTF-8"?>
<Services>
   <Service>
      <Id>0</Id>
      <Information>
         <Name>Otsu Binarization</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/binarization/otsubinarization/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to binarize</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs>
            <Output>
               <Name>otsuBinaryImage</Name>
               <Description>Generated Binary Image</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/jpeg</Allowed>
                     <Allowed>image/png</Allowed>
                     <Allowed>image/tiff</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>1</Id>
      <Information>
         <Name>HOOSC Feature Extraction</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/imageprocessing/hooscfeatureextraction/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to analyze</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Parameter>
               <Name>numberOfRings</Name>
               <Description>Number of rings (reccomended: 2)</Description>
               <Type>
                  <StepNumberType>
                     <Min>1</Min>
                     <Max>4</Max>
                     <Step>1</Step>
                     <Default>2</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>ringsize</Name>
               <Description>ratio of the size of the outer ring to that of the average distance between pair-wise pivot points of the shape</Description>
               <Type>
                  <StepNumberType>
                     <Min>0.25</Min>
                     <Max>1</Max>
                     <Step>0.25</Step>
                     <Default>1</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>pos</Name>
               <Description>binary option indicating whether pivot position information will be encoded in the descriptor</Description>
               <Type>
                  <StepNumberType>
                     <Min>0</Min>
                     <Max>1</Max>
                     <Step>1</Step>
                     <Default>0</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
         </Inputs>
         <Outputs>
            <Output>
               <Name>descriptor_json</Name>
               <Description>extracted descriptors</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>application/json</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
            <Output>
               <Name>descriptor_csv</Name>
               <Description>extracted descriptors</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>text/csv</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>2</Id>
      <Information>
         <Name>Multi Scale Interest Point Detection</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/imageprocessing/multiscaleinterestpointdetection/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to segment</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Parameter>
               <Name>threshold</Name>
               <Description>threshold for receiving only 'strong' features</Description>
               <Type>
                  <StepNumberType>
                     <Min>0</Min>
                     <Max>1</Max>
                     <Step>1e-06</Step>
                     <Default>1e-06</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>maxFeaturesPerScale</Name>
               <Description>Maximum features per scale</Description>
               <Type>
                  <StepNumberType>
                     <Min>-1</Min>
                     <Max>1500</Max>
                     <Step>1</Step>
                     <Default>-1</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>detector</Name>
               <Description>The Interest Point detector to use</Description>
               <Type>
                  <EnumeratedType>
                     <Value>Harris</Value>
                     <Value>Hessian</Value>
                     <Value>Laplace</Value>
                     <Value>Quadrature</Value>
                     <Value>Ridge</Value>
                     <Default>0</Default>
                  </EnumeratedType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>blurSigma</Name>
               <Description>Amount of initial blur applied to the image</Description>
               <Type>
                  <StepNumberType>
                     <Step>0.1</Step>
                     <Default>1</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>numScales</Name>
               <Description>Number of scales per octave</Description>
               <Type>
                  <StepNumberType>
                     <Min>2</Min>
                     <Max>6</Max>
                     <Step>1</Step>
                     <Default>5</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>numOctaves</Name>
               <Description>number of octaves computed.  Each consecutive octave is composed of numScales images which have half the resolution of the previous.</Description>
               <Type>
                  <StepNumberType>
                     <Min>2</Min>
                     <Max>5</Max>
                     <Step>1</Step>
                     <Default>3</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
         </Inputs>
         <Outputs>
            <Output>
               <Name>interestpoints</Name>
               <Description>extracted interest points</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>application/json</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
            <Output>
               <Name>visualization</Name>
               <Description>visualization image</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/jpeg</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>3</Id>
      <Information>
         <Name>ICDAR2017 HisDocLayoutComp Baseline Evaluation</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/evaluation/icdar2017hisdoclayoutcompbaselineevaluation/1</BaseURL>
         <Inputs>
            <Parameter>
               <Name>threshold</Name>
               <Description>threshold for P and R value to make a decision concerning tp, fp, fn, tn</Description>
               <Type>
                  <StepNumberType>
                     <Min>0</Min>
                     <Max>0</Max>
                     <Step>0.01</Step>
                     <Default>0.75</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Data>
               <Name>gtFile</Name>
               <Description>Ground Truth Page XML File</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>application/xml</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Data>
               <Name>hypoFile</Name>
               <Description>Hypothese Page XML File</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>application/xml</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs>
            <Output>
               <Name>metrics</Name>
               <Description>computed metrics</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>application/json</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>4</Id>
      <Information>
         <Name>ICDAR2017 HisDocLayoutComp Layout Evaluation</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/evaluation/icdar2017hisdoclayoutcomplayoutevaluation/1</BaseURL>
         <Inputs>
            <Data>
               <Name>gtImage</Name>
               <Description>Ground Truth Image File</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Data>
               <Name>resultImage</Name>
               <Description>Computed Result Image</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs>
            <Output>
               <Name>metrics</Name>
               <Description>computed metrics</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>application/json</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
            <Output>
               <Name>visualization</Name>
               <Description>results visualization</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/png</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>5</Id>
      <Information>
         <Name>ICDAR2017 HisDocLayoutComp Line Evaluation</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/evaluation/icdar2017hisdoclayoutcomplineevaluation/1</BaseURL>
         <Inputs>
            <Data>
               <Name>gtImage</Name>
               <Description>Ground Truth Image File</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Data>
               <Name>gtXml</Name>
               <Description>Ground Truth Page XML file</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>application/xml</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Data>
               <Name>hypoXml</Name>
               <Description>Hypothese Page XML File</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>application/xml</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Parameter>
               <Name>threshold</Name>
               <Description>IU matching threshold</Description>
               <Type>
                  <StepNumberType>
                     <Min>0</Min>
                     <Max>1</Max>
                     <Step>0.01</Step>
                     <Default>0.75</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>commentLines</Name>
               <Description>Take Comment Lines into account</Description>
               <Type>
                  <EnumeratedType>
                     <Value>true</Value>
                     <Value>false</Value>
                     <Default>1</Default>
                  </EnumeratedType>
               </Type>
            </Parameter>
         </Inputs>
         <Outputs>
            <Output>
               <Name>metrics</Name>
               <Description>computed metrics</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>text/csv</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>6</Id>
      <Information>
         <Name>Wavelength Seam Carving</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/segmentation/wavelengthseamcarving/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to segment</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Parameter>
               <Name>slices</Name>
               <Description>Number of slices (reccomended: 3-5)</Description>
               <Type>
                  <StepNumberType>
                     <Min>1</Min>
                     <Max>8</Max>
                     <Step>1</Step>
                     <Default>3</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>smoothing</Name>
               <Description>smoothing factor</Description>
               <Type>
                  <StepNumberType>
                     <Min>0</Min>
                     <Max>1</Max>
                     <Step>1e-05</Step>
                     <Default>7e-05</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>sigma</Name>
               <Description>sigma of blur to be applied</Description>
               <Type>
                  <StepNumberType>
                     <Min>0</Min>
                     <Max>1</Max>
                     <Step>0.01</Step>
                     <Default>0.12</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>slope</Name>
               <Description>slope parameter</Description>
               <Type>
                  <StepNumberType>
                     <Min>1</Min>
                     <Max>120</Max>
                     <Step>1</Step>
                     <Default>1</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
         </Inputs>
         <Outputs>
            <Output>
               <Name>textlines</Name>
               <Description>extracted text lines</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>application/json</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
            <Output>
               <Name>textlines_csv</Name>
               <Description>extracted text lines</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>text/csv</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>7</Id>
      <Information>
         <Name>Seam Carving Text Line Extraction</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/segmentation/seamcarvingtextlineextraction/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to segment</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Parameter>
               <Name>smooth</Name>
               <Description>smoothing for projection profile matching</Description>
               <Type>
                  <StepNumberType>
                     <Min>0</Min>
                     <Max>1</Max>
                     <Step>0.0001</Step>
                     <Default>0.0003</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>slices</Name>
               <Description>number of image slices for projection profile matching</Description>
               <Type>
                  <StepNumberType>
                     <Min>4</Min>
                     <Max>8</Max>
                     <Step>1</Step>
                     <Default>8</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>sigma</Name>
               <Description>standard deviation for gaussian smoothing</Description>
               <Type>
                  <StepNumberType>
                     <Min>2</Min>
                     <Max>5</Max>
                     <Step>1</Step>
                     <Default>3</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
         </Inputs>
         <Outputs>
            <Output>
               <Name>textlines</Name>
               <Description>extracted text lines</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>application/json</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
            <Output>
               <Name>visualization</Name>
               <Description>Text line visualization</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/png</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>8</Id>
      <Information>
         <Name>Histogram Text Line Segmentation</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/segmentation/histogramtextlinesegmentation/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to detect edges on</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs>
            <Output>
               <Name>textlines</Name>
               <Description>extracted text lines</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>application/json</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
            <Output>
               <Name>visualization</Name>
               <Description>Text line visualization</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/jpeg</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>9</Id>
      <Information>
         <Name>Sharpen Enhancement</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/enhancement/sharpenenhancement/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to binarize</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Parameter>
               <Name>sharpenLevel</Name>
               <Description>Sharpening level to apply</Description>
               <Type>
                  <EnumeratedType>
                     <Value>4</Value>
                     <Value>8</Value>
                     <Default>0</Default>
                  </EnumeratedType>
               </Type>
            </Parameter>
         </Inputs>
         <Outputs>
            <Output>
               <Name>sharpenEnhancedImage</Name>
               <Description>Generated Enhanced Image</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/jpeg</Allowed>
                     <Allowed>image/png</Allowed>
                     <Allowed>image/tiff</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>10</Id>
      <Information>
         <Name>Graph Extraction</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/graph/graphextraction/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to detect edges on</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Parameter>
               <Name>InterestPointDetector</Name>
               <Description>The Interest Point Detector to use</Description>
               <Type>
                  <EnumeratedType>
                     <Value>SCP</Value>
                     <Value>CP</Value>
                     <Value>Harris</Value>
                     <Value>DOG</Value>
                     <Default>3</Default>
                  </EnumeratedType>
               </Type>
            </Parameter>
         </Inputs>
         <Outputs>
            <Output>
               <Name>graphvisualization</Name>
               <Description>Graph Visualization image</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/jpeg</Allowed>
                     <Allowed>image/png</Allowed>
                     <Allowed>image/tiff</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
            <Output>
               <Name>graphxml</Name>
               <Description>Graph XML file</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>text/xml</Allowed>
                     <Allowed>application/xml</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>11</Id>
      <Information>
         <Name>Canny Edge Detection</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/enhancement/cannyedgedetection/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to detect edges on</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs>
            <Output>
               <Name>cannyEdgeImage</Name>
               <Description>Edge Image</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/jpeg</Allowed>
                     <Allowed>image/png</Allowed>
                     <Allowed>image/tiff</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>12</Id>
      <Information>
         <Name>Histogram Enhancement</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/enhancement/histogramenhancement/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to binarize</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs>
            <Output>
               <Name>histogramEnhancedImage</Name>
               <Description>Generated Enhanced Image</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/jpeg</Allowed>
                     <Allowed>image/png</Allowed>
                     <Allowed>image/tiff</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>13</Id>
      <Information>
         <Name>Grayification</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/enhancement/grayification/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to transform</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs>
            <Output>
               <Name>grayImage</Name>
               <Description>Generated Grayscale Image</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/jpeg</Allowed>
                     <Allowed>image/png</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>14</Id>
      <Information>
         <Name>Image Inversion</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/enhancement/imageinversion/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to binarize</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs>
            <Output>
               <Name>invertedImage</Name>
               <Description>Generated Inverted Image</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/jpeg</Allowed>
                     <Allowed>image/png</Allowed>
                     <Allowed>image/tiff</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>15</Id>
      <Information>
         <Name>Sauvola Binarization</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/binarization/sauvolabinarization/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to binarize</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Parameter>
               <Name>radius</Name>
               <Description>Radius of the local region (in pixel)</Description>
               <Type>
                  <StepNumberType>
                     <Min>2</Min>
                     <Max>45</Max>
                     <Step>1</Step>
                     <Default>15</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>thres_tune</Name>
               <Description>Parameter to tune the threshold</Description>
               <Type>
                  <StepNumberType>
                     <Min>0.1</Min>
                     <Max>0.6</Max>
                     <Step>0.1</Step>
                     <Default>0.3</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
         </Inputs>
         <Outputs>
            <Output>
               <Name>sauvolaBinaryImage</Name>
               <Description>Generated Binary Image</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/jpeg</Allowed>
                     <Allowed>image/png</Allowed>
                     <Allowed>image/tiff</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>16</Id>
      <Information>
         <Name>Kraken Binarization</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/binarization/krakenbinarization/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to binarize</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs>
            <Output>
               <Name>krakenBinaryImage</Name>
               <Description>Generated Binary Image</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/jpeg</Allowed>
                     <Allowed>image/png</Allowed>
                     <Allowed>image/tiff</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>17</Id>
      <Information>
         <Name>Artificial Noising</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/imageprocessing/artificialnoising/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to binarize</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Parameter>
               <Name>density</Name>
               <Description>The density of the artificial noise</Description>
               <Type>
                  <StepNumberType>
                     <Min>25</Min>
                     <Max>75</Max>
                     <Step>1</Step>
                     <Default>50</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>strength</Name>
               <Description>The strength of the artificial noise</Description>
               <Type>
                  <StepNumberType>
                     <Min>0</Min>
                     <Max>3</Max>
                     <Step>0.1</Step>
                     <Default>1.5</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Data>
               <Name>noise</Name>
               <Description>The noise xml script to use</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>application/xml</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs>
            <Output>
               <Name>noiseImage</Name>
               <Description>Generated Noisy Image</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/jpeg</Allowed>
                     <Allowed>image/png</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>18</Id>
      <Information>
         <Name>ocropus recognize</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/ocr/ocropusrecognize/1</BaseURL>
         <Inputs>
            <Data>
               <Name>dataFolder</Name>
               <Description>The input collection (needs to contain input text lines *.bin.png files to recognize)</Description>
               <Type>
                  <Folder />
               </Type>
            </Data>
            <Data>
               <Name>recognitionModel</Name>
               <Description>Recognition model to use</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>application/gzip</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs />
      </API>
   </Service>
   <Service>
      <Id>19</Id>
      <Information>
         <Name>Ocropus Training</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/ocr/ocropustraining/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputData</Name>
               <Description>The input collection (needs to contain the ground truth *.gt.txt, and input text lines *.bin.png files)</Description>
               <Type>
                  <Folder />
               </Type>
            </Data>
            <Parameter>
               <Name>lineHeight</Name>
               <Description>the default line height</Description>
               <Type>
                  <StepNumberType>
                     <Min>10</Min>
                     <Max>120</Max>
                     <Step>1</Step>
                     <Default>46</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>trainIteration</Name>
               <Description>Number of training iterations to perform</Description>
               <Type>
                  <StepNumberType>
                     <Min>100</Min>
                     <Max>200000</Max>
                     <Step>100</Step>
                     <Default>100</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>saveFreq</Name>
               <Description>Number of iterations performed after which a model is saved</Description>
               <Type>
                  <StepNumberType>
                     <Min>100</Min>
                     <Max>25000</Max>
                     <Step>100</Step>
                     <Default>100</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
         </Inputs>
         <Outputs>
            <Output>
               <Name>trainingVisualization</Name>
               <Description>Training loss visualization</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/png</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
            <Output>
               <Name>trainingError</Name>
               <Description>Training Error</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>application/json</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>20</Id>
      <Information>
         <Name>Kraken Pagesegmentation</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/binarization/krakenpagesegmentation/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to binarize</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs>
            <Output>
               <Name>textlines</Name>
               <Description>Extracted text lines</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>application/json</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>21</Id>
      <Information>
         <Name>Ocropus Binarization</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/binarization/ocropusbinarization/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to binarize</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Parameter Status="optional">
               <Name>enableSkew</Name>
               <Description>Enable Skew correction</Description>
               <Type>
                  <EnumeratedType>
                     <Value>true</Value>
                     <Value>false</Value>
                     <Default>1</Default>
                  </EnumeratedType>
               </Type>
            </Parameter>
            <Parameter Status="optional">
               <Name>maxskew</Name>
               <Description>skew angle estimation parameter (degree)</Description>
               <Type>
                  <StepNumberType>
                     <Min>1</Min>
                     <Max>15</Max>
                     <Step>1</Step>
                     <Default>2</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter Status="optional">
               <Name>skewsteps</Name>
               <Description>steps for skew angle estimation (per degree)</Description>
               <Type>
                  <StepNumberType>
                     <Min>2</Min>
                     <Max>10</Max>
                     <Step>1</Step>
                     <Default>8</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
         </Inputs>
         <Outputs>
            <Output>
               <Name>ocropusBinaryImage</Name>
               <Description>Generated Binary Image</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/jpeg</Allowed>
                     <Allowed>image/png</Allowed>
                     <Allowed>image/tiff</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>22</Id>
      <Information>
         <Name>Ocropus Page Segmentation</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/segmentation/ocropuspagesegmentation/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to binarize</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs>
            <Output>
               <Name>segmentationImage</Name>
               <Description>Generated Binary Image</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/png</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>23</Id>
      <Information>
         <Name>Text Block Extraction</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/segmentation/textblockextraction/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to detect edges on</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Parameter>
               <Name>maxVerBlockDist</Name>
               <Description>Maximal amount of vertical black pixels, after this amount of pixels a cut will be made</Description>
               <Type>
                  <StepNumberType>
                     <Min>0</Min>
                     <Max>200</Max>
                     <Step>1</Step>
                     <Default>50</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>minVerBlockNbPixels</Name>
               <Description>Minimal number of black pixels per block vertically</Description>
               <Type>
                  <StepNumberType>
                     <Step>1</Step>
                     <Default>200</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>minBlockWidth</Name>
               <Description>Minimal block width</Description>
               <Type>
                  <StepNumberType>
                     <Step>1</Step>
                     <Default>10</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>maxHorBlockDist</Name>
               <Description>Maximal block width</Description>
               <Type>
                  <StepNumberType>
                     <Step>1</Step>
                     <Default>50</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>minHorBlockNbPixels</Name>
               <Description>Minimal amount of black pixels per block horizontally</Description>
               <Type>
                  <StepNumberType>
                     <Step>1</Step>
                     <Default>100</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>minBlockHeight</Name>
               <Description>Minimal block height</Description>
               <Type>
                  <StepNumberType>
                     <Step>1</Step>
                     <Default>200</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>border</Name>
               <Description>Minimal width between two blocks</Description>
               <Type>
                  <StepNumberType>
                     <Step>1</Step>
                     <Default>10</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
         </Inputs>
         <Outputs>
            <Output>
               <Name>textblocks</Name>
               <Description>extracted text lines</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>application/json</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>24</Id>
      <Information>
         <Name>Music Object Detector</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/objectdetection/musicobjectdetector/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image with the handwritten scores</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs>
            <Output>
               <Name>annotationImage</Name>
               <Description>Generated Annotated Image</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/jpeg</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
            <Output>
               <Name>annotations</Name>
               <Description>Annotations</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>text/plain</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>25</Id>
      <Information>
         <Name>Word Image Extraction</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/kws/wordimageextraction/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to extract word images from</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Data>
               <Name>pathSvg</Name>
               <Description />
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/svg+xml</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs />
      </API>
   </Service>
   <Service>
      <Id>26</Id>
      <Information>
         <Name>Active Learning Initialization</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/activelearning/activelearninginitialization/1</BaseURL>
         <Inputs>
            <Data>
               <Name>learning_data</Name>
               <Description>The active learning data needed for the method to work</Description>
               <Type>
                  <Folder />
               </Type>
            </Data>
         </Inputs>
         <Outputs />
      </API>
   </Service>
   <Service>
      <Id>27</Id>
      <Information>
         <Name>Active Learning Method</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/activelearning/activelearningmethod/1</BaseURL>
         <Inputs>
            <Data>
               <Name>learning_data</Name>
               <Description>The active learning data needed for the method to work</Description>
               <Type>
                  <Folder />
               </Type>
            </Data>
         </Inputs>
         <Outputs />
      </API>
   </Service>
   <Service>
      <Id>28</Id>
      <Information>
         <Name>Keypoint graph</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/graph/keypointgraph/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The image to transform (or multiple packed in a zip file). WARNING: any uploaded files can be publically accessed! Do not upload any images (signatures) without permission!</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                        <Allowed>image/tiff</Allowed>
                        <Allowed>application/zip</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs>
            <Output>
               <Name>imageGraph</Name>
               <Description>Resulting graph (or multiple packed in a zip file)</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>application/xml</Allowed>
                     <Allowed>application/zip</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>29</Id>
      <Information>
         <Name>Graph transformation</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/graph/graphtransformation/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputGraph</Name>
               <Description>The graph to transform (gxl, saved as xml or multiple packed in a zip file). WARNING: any uploaded files can be publically accessed! Do not upload any graphs (signatures) without permission!</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>application/xml</Allowed>
                        <Allowed>application/zip</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Parameter>
               <Name>keepEdges</Name>
               <Description>Keep existing edges</Description>
               <Type>
                  <EnumeratedType>
                     <Value>true</Value>
                     <Value>false</Value>
                     <Default>0</Default>
                  </EnumeratedType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>method</Name>
               <Description>Transformation method to apply</Description>
               <Type>
                  <EnumeratedType>
                     <Value>kspan</Value>
                     <Value>knearest</Value>
                     <Default>1</Default>
                  </EnumeratedType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>numberK</Name>
               <Description>Amount of edges to add per node</Description>
               <Type>
                  <StepNumberType>
                     <Min>1</Min>
                     <Max>10</Max>
                     <Step>1</Step>
                     <Default>2</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>mergeMode</Name>
               <Description>kspan only: how to merge node distances</Description>
               <Type>
                  <EnumeratedType>
                     <Value>minimum</Value>
                     <Value>average</Value>
                     <Default>0</Default>
                  </EnumeratedType>
               </Type>
            </Parameter>
         </Inputs>
         <Outputs>
            <Output>
               <Name>transformed</Name>
               <Description>Transformed graph (gxl, saved as xml or multiple packed in a zip file)</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>application/xml</Allowed>
                     <Allowed>application/zip</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>30</Id>
      <Information>
         <Name>Graph edit distance</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/graph/grapheditdistance/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputData</Name>
               <Description>The graphs to treat (packed in a zip file). WARNING: any uploaded files can be publically accessed! Do not upload any graphs (signatures) without permission!</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>application/zip</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Parameter>
               <Name>numberN</Name>
               <Description>Amount of reference graphs (0 to N)</Description>
               <Type>
                  <StepNumberType>
                     <Min>1</Min>
                     <Max>100</Max>
                     <Step>1</Step>
                     <Default>2</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>sortMode</Name>
               <Description>check file names for flags (f / g) to determine correct order. (signatures are rearranged such that genuine ones are first)</Description>
               <Type>
                  <EnumeratedType>
                     <Value>false</Value>
                     <Value>true</Value>
                     <Default>1</Default>
                  </EnumeratedType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>verificationMode</Name>
               <Description>Faster, skips pure reference distances. (reference graphs are not compared against each other)</Description>
               <Type>
                  <EnumeratedType>
                     <Value>false</Value>
                     <Value>true</Value>
                     <Default>0</Default>
                  </EnumeratedType>
               </Type>
            </Parameter>
         </Inputs>
         <Outputs>
            <Output>
               <Name>out</Name>
               <Description>graph edit distances (ged, saved as csv)</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>text/csv</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>31</Id>
      <Information>
         <Name>Signature evaluation</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/graph/signatureevaluation/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputData</Name>
               <Description>The ged files to evaluate (single txt or multiple packed in a zip file)</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>text/plain</Allowed>
                        <Allowed>application/zip</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
            <Parameter>
               <Name>numberR</Name>
               <Description>Amount of reference signatures (0 to N)</Description>
               <Type>
                  <StepNumberType>
                     <Min>1</Min>
                     <Max>100</Max>
                     <Step>1</Step>
                     <Default>2</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>numberG</Name>
               <Description>Amount of genuine signatures (0 to N). Notice: only non-reference signatures are considered</Description>
               <Type>
                  <StepNumberType>
                     <Min>1</Min>
                     <Max>100</Max>
                     <Step>1</Step>
                     <Default>2</Default>
                  </StepNumberType>
               </Type>
            </Parameter>
            <Parameter>
               <Name>verification</Name>
               <Description>Requires 2 input files with same references. Verifies file 2 against file 1 (order is lexicographically determined)</Description>
               <Type>
                  <EnumeratedType>
                     <Value>false</Value>
                     <Value>true</Value>
                     <Default>0</Default>
                  </EnumeratedType>
               </Type>
            </Parameter>
         </Inputs>
         <Outputs>
            <Output>
               <Name>results</Name>
               <Description>evaluation results</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>application/json</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
   <Service>
      <Id>32</Id>
      <Information>
         <Name>Printed Handwritten Segmentation</Name>
      </Information>
      <API>
         <BaseURL>http://divaservices.unifr.ch/api/v2/segmentation/printedhandwrittensegmentation/1</BaseURL>
         <Inputs>
            <Data>
               <Name>inputImage</Name>
               <Description>The input image to segment</Description>
               <Type>
                  <File>
                     <MimeTypes>
                        <Allowed>image/jpeg</Allowed>
                        <Allowed>image/png</Allowed>
                     </MimeTypes>
                  </File>
               </Type>
            </Data>
         </Inputs>
         <Outputs>
            <Output>
               <Name>outputSegmented</Name>
               <Description>Generated Segmented Image</Description>
               <Type>
                  <MimeTypes>
                     <Allowed>image/png</Allowed>
                  </MimeTypes>
               </Type>
            </Output>
         </Outputs>
      </API>
   </Service>
</Services>